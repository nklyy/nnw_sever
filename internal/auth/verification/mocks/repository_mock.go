// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_verification is a generated GoMock package.
package mock_verification

import (
	context "context"
	verification "nnw_s/internal/auth/verification"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetVerificationCode mocks base method.
func (m *MockRepository) GetVerificationCode(ctx context.Context, email, code string) (*verification.Code, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerificationCode", ctx, email, code)
	ret0, _ := ret[0].(*verification.Code)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVerificationCode indicates an expected call of GetVerificationCode.
func (mr *MockRepositoryMockRecorder) GetVerificationCode(ctx, email, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerificationCode", reflect.TypeOf((*MockRepository)(nil).GetVerificationCode), ctx, email, code)
}

// SaveVerificationCode mocks base method.
func (m *MockRepository) SaveVerificationCode(ctx context.Context, code *verification.Code) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveVerificationCode", ctx, code)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveVerificationCode indicates an expected call of SaveVerificationCode.
func (mr *MockRepositoryMockRecorder) SaveVerificationCode(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveVerificationCode", reflect.TypeOf((*MockRepository)(nil).SaveVerificationCode), ctx, code)
}
