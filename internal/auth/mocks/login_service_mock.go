// Code generated by MockGen. DO NOT EDIT.
// Source: login_service.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	context "context"
	auth "nnw_s/internal/auth"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoginService is a mock of LoginService interface.
type MockLoginService struct {
	ctrl     *gomock.Controller
	recorder *MockLoginServiceMockRecorder
}

// MockLoginServiceMockRecorder is the mock recorder for MockLoginService.
type MockLoginServiceMockRecorder struct {
	mock *MockLoginService
}

// NewMockLoginService creates a new mock instance.
func NewMockLoginService(ctrl *gomock.Controller) *MockLoginService {
	mock := &MockLoginService{ctrl: ctrl}
	mock.recorder = &MockLoginServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoginService) EXPECT() *MockLoginServiceMockRecorder {
	return m.recorder
}

// CheckCode mocks base method.
func (m *MockLoginService) CheckCode(ctx context.Context, dto *auth.LoginCodeDTO) (*auth.TokenDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckCode", ctx, dto)
	ret0, _ := ret[0].(*auth.TokenDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckCode indicates an expected call of CheckCode.
func (mr *MockLoginServiceMockRecorder) CheckCode(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckCode", reflect.TypeOf((*MockLoginService)(nil).CheckCode), ctx, dto)
}

// Login mocks base method.
func (m *MockLoginService) Login(ctx context.Context, dto *auth.LoginDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", ctx, dto)
	ret0, _ := ret[0].(error)
	return ret0
}

// Login indicates an expected call of Login.
func (mr *MockLoginServiceMockRecorder) Login(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockLoginService)(nil).Login), ctx, dto)
}

// Logout mocks base method.
func (m *MockLoginService) Logout(ctx context.Context, email string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Logout", ctx, email)
	ret0, _ := ret[0].(error)
	return ret0
}

// Logout indicates an expected call of Logout.
func (mr *MockLoginServiceMockRecorder) Logout(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logout", reflect.TypeOf((*MockLoginService)(nil).Logout), ctx, email)
}
