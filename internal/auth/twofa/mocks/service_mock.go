// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_twofa is a generated GoMock package.
package mock_twofa

import (
	bytes "bytes"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	otp "github.com/pquerna/otp"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CheckTwoFACode mocks base method.
func (m *MockService) CheckTwoFACode(ctx context.Context, code, secret string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckTwoFACode", ctx, code, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckTwoFACode indicates an expected call of CheckTwoFACode.
func (mr *MockServiceMockRecorder) CheckTwoFACode(ctx, code, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckTwoFACode", reflect.TypeOf((*MockService)(nil).CheckTwoFACode), ctx, code, secret)
}

// GenerateTwoFAImage mocks base method.
func (m *MockService) GenerateTwoFAImage(ctx context.Context, email string) (*bytes.Buffer, *otp.Key, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateTwoFAImage", ctx, email)
	ret0, _ := ret[0].(*bytes.Buffer)
	ret1, _ := ret[1].(*otp.Key)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateTwoFAImage indicates an expected call of GenerateTwoFAImage.
func (mr *MockServiceMockRecorder) GenerateTwoFAImage(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateTwoFAImage", reflect.TypeOf((*MockService)(nil).GenerateTwoFAImage), ctx, email)
}
